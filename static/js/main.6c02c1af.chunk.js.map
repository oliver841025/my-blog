{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","components/Header/index.js","WebAPI.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/LogoutPage/LogoutPage.js","pages/RegisterPage/RegisterPage.js","pages/AboutPage/AboutPage.js","pages/NewPostPage/NewPostPage.js","pages/ListPage/ListPage.js","pages/SinglePostPage/SinglePostPage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","NavbarList","LeftContainer","Brand","h2","RightContainer","Nav","Link","props","$active","NotLoginArea","Header","useContext","user","setUser","location","useLocation","history","useHistory","to","pathname","onClick","push","BASE_URL","getPosts","a","fetch","response","json","data","getFivePosts","page","getTotalPostsCounts","headers","get","getPost","id","register","username","password","nickname","method","body","JSON","stringify","login","getMe","authorization","newPost","title","HomePageContainer","PostContainer","PostTitle","PostDate","p","Post","post","Date","createdAt","toLocaleString","HomePage","useState","posts","setPosts","useEffect","then","catch","error","console","log","map","LoginPageContainer","ErrorMessage","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","ok","message","toString","onSubmit","type","value","onChange","e","target","Logout","LogoutPage","RegisterPageContainer","RegisterPage","setNickname","alert","onFocus","AboutPageContainer","AboutPageContent","AboutPage","NewPostPageContainer","NewPostArea","NewPostAreaInput","input","NewPostAreaTextarea","textarea","Button","button","LoadingPage","NewPostPage","titleValue","setTitleValue","contentValue","setContentValue","isLoadingRequest","setIsLoadingRequest","placeholder","ListPageContainer","PaginatorContainer","NextPageButton","LastPageButton","protoTypes","PropTypes","object","ListPage","totalPostsCounts","setTotalPostsCounts","isLoading","setIsLoading","nowPage","setNowPage","length","SinglePostContainer","SinglePostHeader","SinglePostBody","SinglePostTitle","SinglePostDate","SinglePost","SinglePostPage","setPost","useParams","Root","App","Provider","exact","path","ReactDOM","render","theme","colors","primary_300","document","getElementById"],"mappings":"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","file":"static/js/main.6c02c1af.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../contexts';\nimport { setAuthToken } from '../../utils';\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 0 32px;\n  box-sizing: border-box;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`;\n\nconst Brand = styled.h2``;\n\nconst RightContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  text-decoration: none;\n  color: black;\n\n  ${(props) => props.$active && `background: rgba(0,0,0,0.2)`}\n`;\n\nconst NotLoginArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = () => {\n  const { user, setUser } = useContext(AuthContext);\n  const location = useLocation('/');\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthToken('');\n    setUser(null);\n    if (location.pathname !== '/') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>MY BLOG</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === '/'}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === '/about'}>\n            關於\n          </Nav>\n          <Nav to=\"/list\" $active={location.pathname === '/list'}>\n            文章列表\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <RightContainer>\n        <NavbarList>\n          {user && (\n            <Nav\n              to=\"/logout\"\n              $active={location.pathname === '/logout'}\n              onClick={handleLogout}\n            >\n              登出\n            </Nav>\n          )}\n          {!user && (\n            <NotLoginArea>\n              <Nav to=\"/register\" $active={location.pathname === '/register'}>\n                註冊\n              </Nav>\n              <Nav to=\"/login\" $active={location.pathname === '/login'}>\n                登入\n              </Nav>\n            </NotLoginArea>\n          )}\n        </NavbarList>\n      </RightContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nexport default Header;\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = `https://student-json-api.lidemy.me`;\n\nexport const getPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`);\n  const data = await response.json();\n  return data;\n};\n\nexport const getFivePosts = async (page) => {\n  const response = await fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getTotalPostsCounts = async () => {\n  const response = await fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=1&_limit=5`\n  );\n  const data = response.headers.get(\"x-total-count\");\n  return data;\n};\n\nexport const getPost = async (id) => {\n  const response = await fetch(`${BASE_URL}/posts/${id}`);\n  const data = await response.json();\n  return data;\n};\n\nexport const register = async (username, password, nickname) => {\n  const response = await fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const login = async (username, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const getMe = async () => {\n  const token = getAuthToken();\n  const response = await fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const newPost = async (title, body) => {\n  const token = getAuthToken();\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { getPosts } from '../../WebAPI';\nimport { Link } from 'react-router-dom';\n\nconst HomePageContainer = styled.div`\n  width: 80%;\n  margin: 64px auto 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid rgba(1, 12, 34, 0.2);\n`;\n\nconst PostTitle = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.p``;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nconst HomePage = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts()\n      .then((data) => {\n        setPosts(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [posts]);\n\n  return (\n    <HomePageContainer>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </HomePageContainer>\n  );\n};\n\nexport default HomePage;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst LoginPageContainer = styled.div`\n  margin-top: 64px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst LoginPage = () => {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = async () => {\n    setErrorMessage(null);\n    const data = await login(username, password);\n    if (data.ok === 0) {\n      return setErrorMessage(data.message);\n    }\n    setAuthToken(data.token);\n\n    const response = await getMe();\n    if (response.ok !== 1) {\n      setAuthToken(null);\n      return setErrorMessage(response.message.toString());\n    }\n    setUser(response.data);\n    history.push(\"/\");\n  };\n\n  return (\n    <LoginPageContainer>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username:{\" \"}\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          password:{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button>登入</button>\n      </form>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </LoginPageContainer>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Logout = styled.div`\n  margin-top: 96px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst LogoutPage = () => {\n  return <Logout>再見我們會想你的</Logout>;\n};\n\nexport default LogoutPage;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { getMe, register } from \"../../WebAPI\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst RegisterPageContainer = styled.div`\n  margin-top: 64px;\n`;\n\nconst RegisterPage = () => {\n  const { setUser } = useContext(AuthContext);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const history = useHistory();\n\n  const handleSubmit = async () => {\n    setErrorMessage(null);\n    const data = await register(username, password, nickname);\n    if (data.ok === 0) {\n      return setErrorMessage(data.message);\n    }\n    alert(\"註冊成功\");\n    setAuthToken(data.token);\n\n    const response = await getMe();\n    if (response.ok !== 1) {\n      setAuthToken(null);\n      return setErrorMessage(response.message.toString());\n    }\n    setUser(response.data);\n    history.push(\"/\");\n  };\n\n  return (\n    <RegisterPageContainer>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username:{\" \"}\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            onFocus={() => setErrorMessage(null)}\n          />\n        </div>\n        <div>\n          password:{\" \"}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onFocus={() => setErrorMessage(null)}\n          />\n        </div>\n        <div>\n          nickname:{\" \"}\n          <input\n            type=\"text\"\n            value={nickname}\n            onChange={(e) => setNickname(e.target.value)}\n            onFocus={() => setErrorMessage(null)}\n          />\n        </div>\n        <button>註冊</button>\n      </form>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </RegisterPageContainer>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AboutPageContainer = styled.div`\n  margin-top: 64px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AboutPageContent = styled.div`\n  padding: 16px;\n  margin-top: 16px;\n`;\n\nconst AboutPage = () => {\n  return (\n    <AboutPageContainer>\n      <AboutPageContent>\n        一款基本的部落格，別以為我是 Medium 喔 O_O\n      </AboutPageContent>\n    </AboutPageContainer>\n  );\n};\n\nexport default AboutPage;\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { AuthContext } from '../../contexts';\nimport { newPost } from '../../WebAPI';\n\nconst NewPostPageContainer = styled.div`\n  margin: 128px auto 60px auto;\n  width: 600px;\n  height: 300px;\n  box-sizing: border-box;\n`;\n\nconst NewPostArea = styled.div`\n  display: flex;\n  width: 600px;\n  box-sizing: border-box;\n  }\n`;\n\nconst NewPostAreaInput = styled.input`\n  width: 600px;\n  height: 40px;\n  padding: 8px;\n  font-size: 18px;\n`;\n\nconst NewPostAreaTextarea = styled.textarea`\n  margin-top: 16px;\n  width: 600px;\n  height: 200px;\n  padding: 8px;\n  font-size: 18px;\n`;\n\nconst Button = styled.button`\n  margin-top: 16px;\n  padding: 8px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst LoadingPage = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst NewPostPage = () => {\n  const [titleValue, setTitleValue] = useState('');\n  const [contentValue, setContentValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoadingRequest, setIsLoadingRequest] = useState(false);\n\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n\n  if (!user) {\n    history.push('/');\n  }\n\n  const handleTitleChange = (e) => {\n    setTitleValue(e.target.value);\n  };\n\n  const handleContentChange = (e) => {\n    setContentValue(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (isLoadingRequest) {\n      return;\n    }\n    if (user) {\n      if (!titleValue || !contentValue) {\n        return setErrorMessage('請勿留白');\n      }\n      // newPost api\n      setIsLoadingRequest(true);\n      newPost(titleValue, contentValue)\n        .then((response) => {\n          setIsLoadingRequest(false);\n          console.log(response);\n        })\n        .catch((error) => {\n          setIsLoadingRequest(false);\n          setErrorMessage(error);\n        });\n      setTitleValue('');\n      setContentValue('');\n      history.push('/');\n    }\n    history.push('/');\n  };\n\n  return (\n    <NewPostPageContainer>\n      {isLoadingRequest && <LoadingPage>Loading...</LoadingPage>}\n      {user && (\n        <form onSubmit={handleSubmit}>\n          <NewPostArea>\n            <NewPostAreaInput\n              type=\"text\"\n              placeholder=\"標題\"\n              value={titleValue}\n              onChange={handleTitleChange}\n            />\n          </NewPostArea>\n          <NewPostArea>\n            <NewPostAreaTextarea\n              type=\"text\"\n              placeholder=\"內文\"\n              value={contentValue}\n              onChange={handleContentChange}\n            />\n          </NewPostArea>\n          <Button>發布文章</Button>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        </form>\n      )}\n    </NewPostPageContainer>\n  );\n};\n\nexport default NewPostPage;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { getFivePosts, getTotalPostsCounts } from '../../WebAPI';\nimport { Link } from 'react-router-dom';\n\nconst ListPageContainer = styled.div`\n  width: 80%;\n  margin: 64px auto 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid rgba(1, 12, 34, 0.2);\n`;\n\nconst PostTitle = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.p``;\n\nconst PaginatorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 16px;\n`;\n\nconst NextPageButton = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst LastPageButton = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst LoadingPage = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Post = ({ post }) => {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n};\n\nPost.protoTypes = {\n  post: PropTypes.object,\n};\n\nconst ListPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [totalPostsCounts, setTotalPostsCounts] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [nowPage, setNowPage] = useState(1);\n\n  const handleNextPageClick = () => {\n    if (nowPage <= totalPostsCounts / 5) {\n      setNowPage(nowPage + 1);\n    }\n  };\n\n  const handleLastPageClick = () => {\n    if (nowPage <= 1) return;\n    setNowPage(nowPage - 1);\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n    setIsLoading(true);\n    getFivePosts(nowPage)\n      .then((posts) => {\n        setIsLoading(false);\n        setPosts(posts);\n        console.log(nowPage);\n        console.log(nowPage * posts.length);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        alert(error);\n      });\n    getTotalPostsCounts()\n      .then((totalPostsCounts) => {\n        setTotalPostsCounts(totalPostsCounts);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [nowPage]);\n\n  return (\n    <ListPageContainer>\n      {isLoading && <LoadingPage>Loading...</LoadingPage>}\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <PaginatorContainer>\n        {!isLoading && nowPage <= 1 && <div>這是第一頁囉</div>}\n        {!isLoading && nowPage >= 2 && (\n          <LastPageButton onClick={handleLastPageClick}>上一頁</LastPageButton>\n        )}\n        {!isLoading && nowPage > totalPostsCounts / 5 && (\n          <div>這是最後一頁囉</div>\n        )}\n        {!isLoading && nowPage <= totalPostsCounts / 5 && (\n          <NextPageButton onClick={handleNextPageClick}>下一頁</NextPageButton>\n        )}\n      </PaginatorContainer>\n    </ListPageContainer>\n  );\n};\n\nexport default ListPage;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getPost } from '../../WebAPI';\nimport { useParams } from 'react-router';\n\nconst SinglePostContainer = styled.div`\n  padding: 0 30px;\n  max-width: 960px;\n  margin: 8px auto;\n  margin-top: 96px;\n`;\n\nconst SinglePostHeader = styled.div`\n  margin-bottom: 16px;\n  padding: 16px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst SinglePostBody = styled.div`\n  font-size: 20px;\n  letter-spacing: 3px;\n  line-height: 1.5;\n`;\n\nconst SinglePostTitle = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n`;\n\nconst SinglePostDate = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.4);\n  margin-top: 16px;\n`;\n\nconst SinglePost = ({ post }) => {\n  return (\n    <div>\n      <SinglePostHeader>\n        <SinglePostTitle>{post && post.title}</SinglePostTitle>\n        <SinglePostDate>\n          {post && new Date(post.createdAt).toLocaleString()}\n        </SinglePostDate>\n      </SinglePostHeader>\n      <SinglePostBody>{post && post.body}</SinglePostBody>\n    </div>\n  );\n};\n\nconst SinglePostPage = () => {\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id)\n      .then((data) => setPost(data))\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [id]);\n\n  return (\n    <SinglePostContainer>\n      <SinglePost post={post} />\n    </SinglePostContainer>\n  );\n};\n\nexport default SinglePostPage;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Header from '../Header';\nimport HomePage from '../../pages/HomePage';\nimport LoginPage from '../../pages/LoginPage';\nimport LogoutPage from '../../pages/LogoutPage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport AboutPage from '../../pages/AboutPage';\nimport NewPostPage from '../../pages/NewPostPage';\nimport ListPage from '../../pages/ListPage';\nimport SinglePostPage from '../../pages/SinglePostPage';\nimport { AuthContext } from '../../contexts';\nimport { getMe } from '../../WebAPI';\nimport { getAuthToken } from '../../utils';\n\nconst Root = styled.div``;\n\nconst App = () => {\n  const [user, setUser] = useState('');\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/logout\">\n              <LogoutPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/list\">\n              <ListPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <SinglePostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./components/App/App\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#3333dd\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}